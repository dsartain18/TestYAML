# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

stages:
- stage: Build
  jobs: 
  - job: Build

    pool:
      vmImage: 'windows-2019'

    variables: 
      solution: '**\*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      

    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'      
    - task: VSBuild@1
      inputs: 
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\" /p:SourceLinkCreate=true'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: PublishBuildArtifacts@1
      inputs: 
        pathToPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'drop' 
        publishLocation: 'container' # Options: container, filePath
        #targetPath: # Required when publishLocation == FilePath
        #parallel: false # Optional
        #parallelCount: # Optional
        #fileCopyOptions: #Optional
    
- stage: Deploy
  jobs: 
  - deployment: DeployARMTemplate
    displayName: Deploy ARM Template
    pool:
      vmImage: 'vs2017-win2016'
    environment: 'testYAML-dev'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadBuildArtifacts@0
              inputs: 
                buildType: 'current' # Options: current, specific
                #project: # Required when buildType == Specific
                #pipeline: # Required when buildType == Specific
                #specificBuildWithTriggering: false # Optional
                buildVersionToDownload: 'latest' # Required when buildType == Specific. Options: latest, latestFromBranch, specific
                #allowPartiallySucceededBuilds: false # Optional
                #branchName: 'refs/heads/master' # Required when buildType == Specific && BuildVersionToDownload == LatestFromBranch
                #buildId: # Required when buildType == Specific && BuildVersionToDownload == Specific
                #tags: # Optional
                #downloadType: 'single' # Choose whether to download a single artifact or all artifacts of a specific build. Options: single, specific
                #artifactName: # Required when downloadType == Single
                #itemPattern: '**' # Optional
                #downloadPath: '$(System.ArtifactsDirectory)' 
                #parallelizationLimit: '8' # Optional
            - task: AzureResourceGroupDeployment@2
              inputs:
                azureSubscription: 'TestYAML'
                action: 'Create Or Update Resource Group' # Options: create Or Update Resource Group, select Resource Group, start, stop, stopWithDeallocate, restart, delete, deleteRG
                resourceGroupName: 'TestYAML'
                location: 'South Central US' # Required when action == Create Or Update Resource Group
                templateLocation: 'Linked artifact' # Options: linked Artifact, uRL Of The File
                #csmFileLink: # Required when templateLocation == URL Of The File
                #csmParametersFileLink: # Optional
                csmFile: '$(System.DefaultWorkingDirectory)/_TestYAML/drop/AzureResourceGroup/azuredeploy.json' # Required when  TemplateLocation == Linked Artifact
                csmParametersFile: '$(System.DefaultWorkingDirectory)/_TestYAML/drop/AzureResourceGroup/azuredeploy.parameters-dev.json' # Optional
                #overrideParameters: # Optional
                deploymentMode: 'Incremental' # Options: Incremental, Complete, Validation
                enableDeploymentPrerequisites: 'None' # Optional. Options: none, configureVMwithWinRM, configureVMWithDGAgent
                #teamServicesConnection: # Required when enableDeploymentPrerequisites == ConfigureVMWithDGAgent
                #teamProject: # Required when enableDeploymentPrerequisites == ConfigureVMWithDGAgent
                #deploymentGroupName: # Required when enableDeploymentPrerequisites == ConfigureVMWithDGAgent
                #copyAzureVMTags: true # Optional
                #runAgentServiceAsUser: # Optional
                #userName: # Required when enableDeploymentPrerequisites == ConfigureVMWithDGAgent && RunAgentServiceAsUser == True
                #password: # Optional
                #outputVariable: # Optional
                #deploymentName: # Optional
                #deploymentOutputs: # Optional
                #addSpnToEnvironment: false # Optional
