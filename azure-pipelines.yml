# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

stages:
- stage: Build
  jobs: 
  - job: Build

    pool:
      vmImage: 'windows-2019'

    variables: 
      solution: '**\*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'      

    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'      
    - task: VSBuild@1
      inputs: 
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.ArtifactStagingDirectory)/AzureResourceGroup'
      inputs:
        SourceFolder: TestYAML\AzureResourceGroup
        Contents: '*.json'
        TargetFolder: '$(build.ArtifactStagingDirectory)/AzureResourceGroup'
    - task: PublishBuildArtifacts@1
      inputs: 
        pathToPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: '$(Parameters.ArtifactName)' 
        publishLocation: 'container' # Options: container, filePath
        #targetPath: # Required when publishLocation == FilePath
        #parallel: false # Optional
        #parallelCount: # Optional
        #fileCopyOptions: #Optional
- stage: Deploy
  jobs: 
  - deployment: DeployARMTemplate
    displayName: Deploy ARM Template
    pool:
      vmImage: 'vs2017-win2016'
    environment: 'testYAML-dev'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: '$(Parameters.ArtifactName)'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureResourceManagerTemplateDeployment@3
              inputs:
                deploymentScope: 'Resource Group'
                azureResourceManagerConnection: 'TestYAML'
                subscriptionId: '91d5a083-c93b-4df9-b783-478aab256259'
                action: 'Create Or Update Resource Group'
                resourceGroupName: 'TestYAML'
                location: 'South Central US'
                templateLocation: 'Linked artifact'
                csmFile: '$(System.ArtifactsDirectory)/$(Parameters.ArtifactName)/AzureResourceGroup/azuredeploy.json'
                csmParametersFile: '$(System.ArtifactsDirectory)/$(Parameters.ArtifactName)/AzureResourceGroup/azuredeploy.parameters-dev.json'
                deploymentMode: 'Incremental'
            - task: AzureRmWebAppDeployment@4
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'TestYAML'
                appType: 'webApp'
                WebAppName: 'td-TestYAML-dev'
                packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
                TakeAppOfflineFlag: true
                UseWebDeploy: true
                RenameFilesFlag: true